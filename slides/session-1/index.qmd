---
title: "Workshop on Experimental Phonetics Tools (WEPhT)"
subtitle: "Session 1"
author: "Stefano Coretta"
format:
  mono-light-revealjs:
    theme: [default, ../custom.scss]
    history: false
syntax-definitions: [../praat.xml]
filters: 
  - tachyonsextra
---

## Overview

::: box-note
**Session 1**

- Praat: Detect voice activity

- Praat: Split long file into individual utterances

- BAS: ASR

- Praat: Text to TextGrid
:::

::: box-tip
**Session 2**

- MFA: align

- Praat: Fix alignment
:::

::: box-warning
**Session 3**

- Using FastTrack to extract formant measures and f0.

- Extract other phonetic measurements.
:::

## Set up

::: box-tip

- Latest version of [Praat](https://www.fon.hum.uva.nl/praat/).

- [Montreal Forced Aligner](https://montreal-forced-aligner.readthedocs.io/en/latest/).

- [FastTrack](https://github.com/santiagobarreda/FastTrack).

- [Workshop files](https://github.com/uoelel/WEPhT/releases).

:::

## Praat scripting basics: hello

```praat
writeInfoLine: "Hello!"
```

## Praat scripting basics: strings

```praat
sent$ = "Hello!"

writeInfoLine: sent$
```


## Praat scripting basics: string interpolation

```praat
name$ = "Stefano"

writeInfoLine: "Hello, 'name$'!"
```

## Praat scripting basics: overwrite

```praat
name$ = "Stefano"

writeInfoLine: "Hello, 'name$'!"
writeInfoLine: "How are you?"
```

## Praat scripting basics: append

```praat
name$ = "Stefano"

writeInfoLine: "Hello, 'name$'!"
appendInfoLine: "How are you?"
```

## Praat scripting basics: maths

```praat
a = 3
b = 4

writeInfoLine: 3 + 4
```

## Praat scripting basics: for loops

```praat
clearinfo

for num from 1 to 10
  appendInfoLine: num
endfor
```

## Praat scripting: listing directories

✅ - Create a new Praat script and save it as `01_vad.praat` in the `code/` folder.

```praat
raw$ = "../data/swahili/swah1253_long"

Create Strings as directory list: "dir_list", raw$
```

## Praat scripting: loop through directories

```praat
raw$ = "../data/swahili/swah1253_long"

dirs = Create Strings as directory list: "dir_list", raw$
dirs_n = Get number of strings

clearinfo

# Loop through directories
for dir from 1 to dirs_n
  selectObject: dirs
  dir$ = Get string: dir

  appendInfoLine: dir$
endfor
```

## Praat scripting: looping through files

```praat
raw$ = "../data/swahili/swah1253_long"

dirs = Create Strings as directory list: "dir_list", raw$
dirs_n = Get number of strings

# Loop through directories
for dir from 1 to dirs_n
  selectObject: dirs
  dir$ = Get string: dir

  files = Create Strings as file list: "file_list", "'raw$'/'dir$'/*.wav"
  files_n = Get number of strings

  clearinfo

  # Loop through files in each directory
  for file from 1 to files_n
    selectObject: files
    file$ = Get string: file

    appendInfoLine: file$

  endfor
endfor
```

## Chunking long recordings

- Using voice activity detection (VAD) in Praat.

- Script `01_vad.praat`.

## `01_vad.praat`

```praat
raw$ = "../data/swahili/swah1253_long"

dirs = Create Strings as directory list: "dir_list", raw$
dirs_n = Get number of strings

# Loop through directories
for dir from 1 to dirs_n
  selectObject: dirs
  dir$ = Get string: dir

  files = Create Strings as file list: "file_list", "'raw$'/'dir$'/*.wav"
  files_n = Get number of strings

  # Loop through files in each directory
  for file from 1 to files_n
    selectObject: files
    file$ = Get string: file

    file_name$ = file$ - ".wav"
    wav = Read from file: "'raw$'/'dir$'/'file$'"

    # Using -40 instead of -25 for silence threashold
    tg = To TextGrid (silences): 100, 0, -40, 0.1, 0.1, "silent", "sounding"

    Save as text file: "'raw$'/'dir$'/'file_name$'.TextGrid"
  endfor
endfor
```

✅ -- **Run the `code/01_vad.praat` script in Praat.**

## Fixing the detected intervals

✅ -- **Fix each TextGrid and save them to a new file (don't overwrite the original TextGrids!). Name the fixed TextGrid with the same name as the original plus `-fixed`.**

## Praat scripting: read files

✅ - **Create a new Praat script and save it as `02_chunk.praat` in the `code/` folder.**

```praat
raw$ = "../data/swahili/swah1253_long"
derived$ = "../data/swahili/swah1253"
createFolder: derived$

dirs = Create Strings as directory list: "dir_list", raw$
dirs_n = Get number of strings

# Loop through directories
for dir from 1 to dirs_n
  selectObject: dirs
  dir$ = Get string: dir

  createFolder: "'derived$'/'dir$'"

  files = Create Strings as file list: "file_list", "'raw$'/'dir$'/*.wav"
  files_n = Get number of strings

  # Loop through files in each directory
  for file from 1 to files_n
    selectObject: files
    file$ = Get string: file

    file_name$ = file$ - ".wav"
    wav = Read from file: "'raw$'/'dir$'/'file$'"

    tg = Read from file: "'raw$'/'dir$'/'file_name$'-fixed.TextGrid"
  endfor
endfor
```

## Chunk long recordings

```praat
raw$ = "../data/swahili/swah1253_long"
derived$ = "../data/swahili/swah1253"
createFolder: derived$

dirs = Create Strings as directory list: "dir_list", raw$
dirs_n = Get number of strings

# Loop through directories
for dir from 1 to dirs_n
  selectObject: dirs
  dir$ = Get string: dir

  createFolder: "'derived$'/'dir$'"

  files = Create Strings as file list: "file_list", "'raw$'/'dir$'/*.wav"
  files_n = Get number of strings

  # Loop through files in each directory
  for file from 1 to files_n
    selectObject: files
    file$ = Get string: file
    file_name$ = file$ - ".wav"
    wav = Read from file: "'raw$'/'dir$'/'file$'"
    tg = Read from file: "'raw$'/'dir$'/'file_name$'-fixed.TextGrid"

    selectObject: tg
    int_n = Get number of intervals: 1

    for int from 1 to int_n
      selectObject: tg
      int$ = Get label of interval: 1, int

      if int$ == "sounding"
        int_start = Get start time of interval: 1, int
        int_end = Get end time of interval: 1, int

        selectObject: wav
        wav_part = Extract part: int_start - 0.1, int_end + 0.1, "rectangular", 1, "no"

        @zeroPadding: int, 3
        Save as WAV file: "'derived$'/'dir$'/'file_name$'-'zeroPadding.return$'.wav"
      endif
    endfor
  endfor
endfor

# Procedure to pad zeros in file names indeces
procedure zeroPadding: .num, .numZeros
  .highestVal = 10 ^ .numZeros

  .num$ = string$: .num
  .numLen = length: .num$

  .numToAdd = .numZeros - .numLen

  .zeroPrefix$ = ""
  if .numToAdd > 0
      for i from 1 to .numToAdd
          .zeroPrefix$ = .zeroPrefix$ + "0"
      endfor
  endif

  .return$ = .zeroPrefix$ + .num$
endproc
```

## Get a transcript for each utterance sound file

✅ -- **Run the ASR BAS web service.**

::: box-tip

- Go to <https://clarin.phonetik.uni-muenchen.de/BASWebServices/interface/ASR> and log in with your Uni shibboleth.

- Drop the `.wav` files in the files drop area and click "Upload". The set the following:

  - Language to `Swahili (Kenya)'.
  - ASR service to `Google Speech Cloud ASR`.

- Accept the terms and click on "Run web service" to run the service.

- Download the resulting files (they will be zipped) and then move the trascripts in each speaker's folder in `data/swahili/swah1253`. (With a lot of speakers and files, which should be the standard, you might want to script copying these files so you don't have to do it manually),

- Ideally, you would also check and fix the trascripts if needed (we are not gonna do that now).
:::